#!/bin/bash

# Script de Deploy para Raunaimer Monfre Advocacia
# Uso: ./deploy.sh [ambiente]

set -e

# Cores para output
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

# Fun√ß√£o para log
log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warn() {
    echo -e "${YELLOW}[$(date +'%Y-%m-%d %H:%M:%S')] WARNING: $1${NC}"
}

error() {
    echo -e "${RED}[$(date +'%Y-%m-%d %H:%M:%S')] ERROR: $1${NC}"
    exit 1
}

# Verificar se Node.js est√° instalado
if ! command -v node &> /dev/null; then
    error "Node.js n√£o est√° instalado. Instale o Node.js primeiro."
fi

# Verificar se npm est√° instalado
if ! command -v npm &> /dev/null; then
    error "npm n√£o est√° instalado. Instale o npm primeiro."
fi

# Ambiente padr√£o
ENVIRONMENT=${1:-production}

log "Iniciando deploy para ambiente: $ENVIRONMENT"

# Limpar cache e node_modules se necess√°rio
if [ "$2" = "--clean" ]; then
    log "Limpando cache e reinstalando depend√™ncias..."
    rm -rf node_modules package-lock.json
    npm install
fi

# Instalar depend√™ncias
log "Instalando depend√™ncias..."
npm install

# Verificar se as vari√°veis de ambiente est√£o configuradas
if [ ! -f ".env" ]; then
    warn "Arquivo .env n√£o encontrado. Verifique se as vari√°veis do EmailJS est√£o configuradas."
    echo "Copie o arquivo emailjs-config.example para .env e configure as vari√°veis:"
    echo "VITE_EMAILJS_SERVICE_ID=sua_service_id"
    echo "VITE_EMAILJS_TEMPLATE_ID=sua_template_id"
    echo "VITE_EMAILJS_PUBLIC_KEY=sua_public_key"
fi

# Build para produ√ß√£o
log "Executando build para produ√ß√£o..."
npm run build

# Verificar se o build foi bem-sucedido
if [ ! -d "dist" ]; then
    error "Build falhou. Pasta dist n√£o foi criada."
fi

log "Build conclu√≠do com sucesso!"

# Informa√ß√µes sobre o deploy
echo ""
log "üì¶ Arquivos prontos para deploy na pasta 'dist/'"
echo ""
log "üìç Estrutura de Dom√≠nios:"
echo "- raunaimer.adv.br ‚Üí Landing page de vendas (este projeto)"
echo "- app.raunaimer.adv.br ‚Üí Sistema Raunaimer (aplica√ß√£o principal)"
echo ""
log "üìã Pr√≥ximos passos para deploy no dom√≠nio raunaimer.adv.br:"
echo "1. Fa√ßa upload dos arquivos da pasta 'dist/' para o servidor"
echo "2. Configure o servidor web (Apache/Nginx) para servir os arquivos"
echo "3. Configure o arquivo .htaccess (j√° inclu√≠do na pasta public/)"
echo "4. Configure HTTPS para seguran√ßa"
echo "5. Teste o formul√°rio de contato"
echo ""
log "üîß Configura√ß√µes recomendadas:"
echo "- Servidor: Nginx (detectado na VPS)"
echo "- Document Root: /var/www/html"
echo "- Configura√ß√£o: nginx-config.conf (inclu√≠do no projeto)"
echo "- SSL: Certificado v√°lido para raunaimer.adv.br"
echo ""
log "üìã Comandos para deploy na VPS:"
echo "1. Upload dos arquivos: scp -r dist/* root@191.252.111.245:/var/www/html/"
echo "2. Upload da configura√ß√£o: scp nginx-config.conf root@191.252.111.245:/etc/nginx/sites-available/"
echo "3. Ativar site: ln -s /etc/nginx/sites-available/nginx-config.conf /etc/nginx/sites-enabled/"
echo "4. Testar configura√ß√£o: nginx -t"
echo "5. Recarregar Nginx: systemctl reload nginx"
echo ""

# Tamanho do build
BUILD_SIZE=$(du -sh dist | cut -f1)
log "üìä Tamanho do build: $BUILD_SIZE"

log "‚úÖ Deploy preparado com sucesso!" 